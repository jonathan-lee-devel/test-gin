// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import mongo "go.mongodb.org/mongo-driver/mongo"

import userModels "test-gin/users/models"

// UserRepository is an autogenerated mock type for the UserRepository type
type UserRepository struct {
	mock.Mock
}

// FindOne provides a mock function with given fields: filter
func (_m *UserRepository) FindOne(filter interface{}) (userModels.User, error) {
	ret := _m.Called(filter)

	var r0 userModels.User
	if rf, ok := ret.Get(0).(func(interface{}) userModels.User); ok {
		r0 = rf(filter)
	} else {
		r0 = ret.Get(0).(userModels.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertOne provides a mock function with given fields: filter
func (_m *UserRepository) InsertOne(filter interface{}) (*mongo.InsertOneResult, error) {
	ret := _m.Called(filter)

	var r0 *mongo.InsertOneResult
	if rf, ok := ret.Get(0).(func(interface{}) *mongo.InsertOneResult); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*mongo.InsertOneResult)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
